const i=t=>{if(!t.ok||!String(t.status).startsWith("20"))throw new Error(`HTTP error from Lact! status: ${t.status} ${t.statusText}`)},s=t=>({"X-CSRF-TOKEN":document.querySelector('meta[name="csrf"]').content,"Content-Type":"application/json",accept:"application/json",...t}),c=t=>!t.ok||!String(t.status).startsWith("20")?{ok:t.ok,status:t.status,message:t.statusText}:{},j=t=>d(t.errors),b=422;function d(t){return Object.keys(t).reduce((r,e)=>(r[e]=t[e][0],r),{})}const h=()=>[{name:"debugbar.openhandler",uri:"_debugbar/open"},{name:"debugbar.clockwork",uri:"_debugbar/clockwork/{id}"},{name:"debugbar.assets.css",uri:"_debugbar/assets/stylesheets"},{name:"debugbar.assets.js",uri:"_debugbar/assets/javascript"},{name:"debugbar.cache.delete",uri:"_debugbar/cache/{key}/{tags?}"},{name:"debugbar.queries.explain",uri:"_debugbar/queries/explain"},{name:"boost.browser-logs",uri:"_boost/browser-logs"},{name:"project.list",uri:"action/app-http-controllers-projectcontroller/projects"},{name:"project.store",uri:"action/app-http-controllers-projectcontroller/store"},{name:"project.edit-data",uri:"action/app-http-controllers-projectcontroller/editdata/{project}"},{name:"project.update",uri:"action/app-http-controllers-projectcontroller/update/{project}"},{name:"project.destroy",uri:"action/app-http-controllers-projectcontroller/destroy/{project}"},{name:"project.export",uri:"action/app-http-controllers-projectcontroller/projectexport"},{name:"project.export-time-logs",uri:"action/app-http-controllers-projectcontroller/exporttimelogs"},{name:"ai-chat.get-histories",uri:"action/app-http-controllers-aichatcontroller/getchathistories"},{name:"ai-chat.get-history",uri:"action/app-http-controllers-aichatcontroller/getchathistory"},{name:"ai-chat.delete-history",uri:"action/app-http-controllers-aichatcontroller/deletechathistory"},{name:"ai-chat.send-message",uri:"action/app-http-controllers-aichatcontroller/sendmessage"},{name:"dashboard.recent-logs",uri:"action/app-http-controllers-dashboardcontroller/recentlogs"},{name:"dashboard.stats",uri:"action/app-http-controllers-dashboardcontroller/stats"},{name:"dashboard.projects",uri:"action/app-http-controllers-dashboardcontroller/projects"},{name:"dashboard.tasks",uri:"action/app-http-controllers-dashboardcontroller/tasks"},{name:"task.update",uri:"action/app-http-controllers-taskcontroller/update/{task}"},{name:"task.list",uri:"action/app-http-controllers-taskcontroller/tasks"},{name:"task.store",uri:"action/app-http-controllers-taskcontroller/store"},{name:"task.show",uri:"action/app-http-controllers-taskcontroller/show/{task}"},{name:"task.detail-data",uri:"action/app-http-controllers-taskcontroller/detaildata/{task}"},{name:"task.edit-data",uri:"action/app-http-controllers-taskcontroller/editdata/{task}"},{name:"task.updateStatus",uri:"action/app-http-controllers-taskcontroller/updatestatus/{task}"},{name:"task.destroy",uri:"action/app-http-controllers-taskcontroller/destroy/{task}"},{name:"task.export",uri:"action/app-http-controllers-taskcontroller/exporttasks"},{name:"task.potential-assignees",uri:"action/app-http-controllers-taskcontroller/potentialassignees/{project}"},{name:"tasks.count",uri:"action/app-http-controllers-taskcontroller/count"},{name:"task.attachments.destroy",uri:"action/app-http-controllers-taskcontroller/destroyattachment/{task}/{filename}"},{name:"time-log.store",uri:"action/app-http-controllers-timelogcontroller/store"},{name:"time-log.update",uri:"action/app-http-controllers-timelogcontroller/update/{timeLog}"},{name:"time-log.destroy",uri:"action/app-http-controllers-timelogcontroller/destroy/{timeLog}"},{name:"time-log.mark-as-paid",uri:"action/app-http-controllers-timelogcontroller/markaspaid"},{name:"time-log.export",uri:"action/app-http-controllers-timelogcontroller/export"},{name:"time-log.import",uri:"action/app-http-controllers-timelogcontroller/import"},{name:"time-log.template",uri:"action/app-http-controllers-timelogcontroller/template"},{name:"github.repositories.sync",uri:"action/app-http-controllers-githubrepositorycontroller/syncrepository/{project}"},{name:"jira.projects.sync",uri:"action/app-http-controllers-jiracontroller/syncproject/{project}"},{name:"client.list",uri:"action/app-http-controllers-clientcontroller/clients"},{name:"client.store",uri:"action/app-http-controllers-clientcontroller/store"},{name:"client.update",uri:"action/app-http-controllers-clientcontroller/update/{client}"},{name:"client.destroy",uri:"action/app-http-controllers-clientcontroller/destroy/{client}"},{name:"client.client.projects",uri:"action/app-http-controllers-clientcontroller/clientprojects/{client}"},{name:"client.export",uri:"action/app-http-controllers-clientcontroller/clientexport"},{name:"invoice.store",uri:"action/app-http-controllers-invoicecontroller/store"},{name:"invoice.list",uri:"action/app-http-controllers-invoicecontroller/invoices"},{name:"invoice.export",uri:"action/app-http-controllers-invoicecontroller/invoiceexport"},{name:"getUnpaidTimeLogs",uri:"action/app-http-controllers-invoicecontroller/getunpaidtimelogs"},{name:"invoice.downloadPdf",uri:"action/app-http-controllers-invoicecontroller/downloadpdf/{invoice}"},{name:"invoice.sendEmail",uri:"action/app-http-controllers-invoicecontroller/sendemail/{invoice}"},{name:"invoice.updateStatus",uri:"action/app-http-controllers-invoicecontroller/updatestatus/{invoice}"},{name:"task.comments.store",uri:"action/app-http-controllers-taskcommentcontroller/store/{task}"},{name:"task.comments.destroy",uri:"action/app-http-controllers-taskcommentcontroller/destroy/{task}/{comment}"},{name:"task.comments.update",uri:"action/app-http-controllers-taskcommentcontroller/update/{task}/{comment}"},{name:"approvals.count",uri:"action/app-http-controllers-approvalcontroller/count"},{name:"approvals.approve",uri:"action/app-http-controllers-approvalcontroller/approve"},{name:"approvals.approve-multiple",uri:"action/app-http-controllers-approvalcontroller/approvemultiple"},{name:"approvals.reject",uri:"action/app-http-controllers-approvalcontroller/reject"},{name:"approvals.reject-multiple",uri:"action/app-http-controllers-approvalcontroller/rejectmultiple"},{name:"team.store",uri:"action/app-http-controllers-teamcontroller/store"},{name:"team.update",uri:"action/app-http-controllers-teamcontroller/update/{user}"},{name:"team.destroy",uri:"action/app-http-controllers-teamcontroller/destroy/{user}"},{name:"team.export",uri:"action/app-http-controllers-teamcontroller/export"},{name:"team.export-time-logs",uri:"action/app-http-controllers-teamcontroller/exporttimelogs"},{name:"notifications.all",uri:"action/app-http-controllers-notificationscontroller/all"},{name:"notifications.mark-all-as-read",uri:"action/app-http-controllers-notificationscontroller/markallasread"},{name:"notifications.mark-as-read",uri:"action/app-http-controllers-notificationscontroller/markasread"},{name:"home",uri:"/"},{name:"pricing",uri:"pricing"},{name:"features.time-tracking",uri:"features/time-tracking"},{name:"features.detailed-reports",uri:"features/detailed-reports"},{name:"features.team-collaboration",uri:"features/team-collaboration"},{name:"features.client-management",uri:"features/client-management"},{name:"features.bulk-upload",uri:"features/bulk-upload"},{name:"features.approval-management",uri:"features/approval-management"},{name:"features.currency-management",uri:"features/currency-management"},{name:"features.multi-currency-invoice",uri:"features/multi-currency-invoice"},{name:"features.task-management",uri:"features/task-management"},{name:"features.github-integration",uri:"features/github-integration"},{name:"privacy-policy",uri:"privacy-policy"},{name:"terms-of-service",uri:"terms-of-service"},{name:"cookie-policy",uri:"cookie-policy"},{name:"gdpr-compliance",uri:"gdpr-compliance"},{name:"security",uri:"security"},{name:"dashboard",uri:"dashboard"},{name:"notifications.index",uri:"notifications"},{name:"integration.index",uri:"integration"},{name:"team.index",uri:"team"},{name:"team.all-time-logs",uri:"team/all-time-logs"},{name:"team.time-logs",uri:"team/{user}/time-logs"},{name:"client.index",uri:"client"},{name:"client.projects",uri:"client/{client}/projects"},{name:"project.index",uri:"project"},{name:"project.create",uri:"project/create"},{name:"project.edit",uri:"project/{project}/edit"},{name:"project.time-logs",uri:"project/{project}/time-logs"},{name:"project.notes",uri:"project/{project}/notes"},{name:"project.notes.store",uri:"project/{project}/notes"},{name:"project.notes.update",uri:"project/{project}/notes/{note}"},{name:"project.notes.destroy",uri:"project/{project}/notes/{note}"},{name:"task.index",uri:"task"},{name:"task.detail",uri:"task/{task}"},{name:"time-log.index",uri:"time-log"},{name:"time-log.approvals",uri:"time-log/approvals"},{name:"invoice.index",uri:"invoice"},{name:"invoice.create",uri:"invoice/create"},{name:"client.invoices",uri:"client/{client}/invoices"},{name:"approvals.index",uri:"approvals"},{name:"calendar.index",uri:"calendar"},{name:"calendar.detail",uri:"calendar/detail/{id}"},{name:"profile.edit",uri:"settings/profile"},{name:"profile.update",uri:"settings/profile"},{name:"profile.photo.update",uri:"settings/profile/photo"},{name:"profile.photo.destroy",uri:"settings/profile/photo"},{name:"profile.destroy",uri:"settings/profile"},{name:"password.edit",uri:"settings/password"},{name:"password.update",uri:"settings/password"},{name:"appearance",uri:"settings/appearance"},{name:"currency.edit",uri:"settings/currency"},{name:"currency.store",uri:"settings/currency"},{name:"currency.destroy",uri:"settings/currency/{currency}"},{name:"auth.github",uri:"auth/github"},{name:"register",uri:"register"},{name:"login",uri:"login"},{name:"auth.google",uri:"auth/google"},{name:"password.request",uri:"forgot-password"},{name:"password.email",uri:"forgot-password"},{name:"password.reset",uri:"reset-password/{token}"},{name:"password.store",uri:"reset-password"},{name:"verification.notice",uri:"verify-email"},{name:"verification.verify",uri:"verify-email/{id}/{hash}"},{name:"verification.send",uri:"email/verification-notification"},{name:"password.confirm",uri:"confirm-password"},{name:"logout",uri:"logout"},{name:"github.repositories",uri:"github/repositories"},{name:"github.repositories.personal",uri:"github/repositories/personal"},{name:"github.repositories.organization",uri:"github/repositories/organization"},{name:"github.repositories.import",uri:"github/repositories/import"},{name:"tags.index",uri:"tags"},{name:"tags.autocomplete",uri:"tags/autocomplete"},{name:"tags.store",uri:"tags"},{name:"tags.update",uri:"tags/{tag}"},{name:"tags.destroy",uri:"tags/{tag}"},{name:"admin.index",uri:"administration"},{name:"admin.users.index",uri:"administration/users"},{name:"admin.projects.index",uri:"administration/projects"},{name:"admin.clients.index",uri:"administration/clients"},{name:"admin.invoices.index",uri:"administration/invoices"},{name:"jira.connect",uri:"jira/connect"},{name:"jira.projects",uri:"jira/projects"},{name:"jira.credentials.store",uri:"jira/credentials"},{name:"jira.projects.list",uri:"jira/projects/list"},{name:"jira.projects.import",uri:"jira/projects/import"},{name:"storage.local",uri:"storage/{path}"}],g=()=>{let t="https://workhours.test";return t.endsWith("/")?t:t+"/"},f=(t,r)=>{if(!r||Object.keys(r).length===0)return t;for(const[o,n]of Object.entries(r))t=t.replace(`{${o}}`,n);const e=Object.entries(r).filter(([o,n])=>!t.includes(n));if(e.length>0){const o=e.map(([n,l])=>`${encodeURIComponent(n)}=${encodeURIComponent(l)}`).join("&");t+=(t.includes("?")?"&":"?")+o}return t},k=(t,r)=>{const e=t.match(/{([^}]+)}/);if(e)throw new Error(`From Lact: "${e[1]}" parameter is required in route ${r}`)},a=(t,r={})=>{const o=h().find(l=>l.name===t);if(!o)throw new Error(`Route Error from Lact: [${t}] not found.`);let n=f(o.uri,r);return k(n,o.name),g()+n},p={errors:{},call:function({params:t={},headers:r={},methodHead:e=!1}){return fetch(a("task.list",t),{method:e?"HEAD":"GET",headers:s(r)}).then(o=>(p.errors=c(o),i(o),o))},data:function({params:t={},headers:r={}}){return fetch(a("task.list",t),{method:"GET",headers:s(r)}).then(async e=>(p.errors=c(e),i(e),e.json()))},route:function(t={}){return a("task.list",t)},routeName:"task.list",form:function(t={}){return{method:"get",url:a("task.list",t)}}},u={errors:{},call:function({params:t={},headers:r={},methodHead:e=!1}){return fetch(a("task.potential-assignees",t),{method:e?"HEAD":"GET",headers:s(r)}).then(o=>(u.errors=c(o),i(o),o))},data:function({params:t={},headers:r={}}){return fetch(a("task.potential-assignees",t),{method:"GET",headers:s(r)}).then(async e=>(u.errors=c(e),i(e),e.json()))},route:function(t={}){return a("task.potential-assignees",t)},routeName:"task.potential-assignees",form:function(t={}){return{method:"get",url:a("task.potential-assignees",t)}}},m={errors:{},call:function({params:t={},headers:r={},methodHead:e=!1}){return fetch(a("tasks.count",t),{method:e?"HEAD":"GET",headers:s(r)}).then(o=>(m.errors=c(o),i(o),o))},data:function({params:t={},headers:r={}}){return fetch(a("tasks.count",t),{method:"GET",headers:s(r)}).then(async e=>(m.errors=c(e),i(e),e.json()))},route:function(t={}){return a("tasks.count",t)},routeName:"tasks.count",form:function(t={}){return{method:"get",url:a("tasks.count",t)}}},v=Object.freeze(Object.defineProperty({__proto__:null,count:m,potentialAssignees:u,tasks:p},Symbol.toStringTag,{value:"Module"}));export{v as T,p as a,s as b,m as c,j as l,c as m,a as r,i as t,b as v};
